// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"demo-temporal-project/client/temporal"
	"demo-temporal-project/configs"
	"demo-temporal-project/internal/service"
	"demo-temporal-project/server"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

func wireApp(configsServer *configs.Server, string2 string, demoTemporalProject *configs.DemoTemporalProject, configsTemporal *configs.Temporal, logger log.Logger) (*kratos.App, func(), error) {
	client, cleanup, err := temporal.NewTemporalClient(logger, configsTemporal, string2)
	if err != nil {
		return nil, nil, err
	}
	transactionService := service.NewTransactionServer(client)
	grpcServer := server.NewGRPCServer(configsServer, logger, transactionService)
	httpServer := server.NewHTTPServer(configsServer, logger, transactionService)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
